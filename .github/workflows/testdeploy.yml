name: Deploy Application

on:
  workflow_dispatch:

jobs:
  # Job 1: Set up infrastructure (run this only when needed)
  setup-infrastructure:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Manual trigger only
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install Ansible
        run: pip install ansible
      
      - name: Create SSH key file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/ec2-key.pem
          chmod 600 /tmp/ec2-key.pem
      
      - name: Run Ansible playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.yml ec2-setup-playbook.yml \
            --private-key /tmp/ec2-key.pem \
             --extra-vars "ec2_public_ip=${{ secrets.EC2_HOST }} ec2_user=${{ secrets.EC2_USER }}"
      
      - name: Clean up SSH key
        run: rm -f /tmp/ec2-key.pem

  # Job 2: Build and deploy application (runs on every push)
  deploy-application:
    needs: setup-infrastructure
    runs-on: ubuntu-latest
    # Remove the 'needs' line if you want this to run independently
    # needs: setup-infrastructure
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Build application
        run: |
          dotnet publish -c Release -o publish
          tar -czf app-deployment.tar.gz -C publish .
      
      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "app-deployment.tar.gz"
          target: "/tmp/"
      
      - name: Deploy and restart service on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            # Your existing deployment script here
            sudo systemctl stop your-dotnet-app || true
            cd /var/www/your-app
            sudo rm -rf ./current/*
            sudo tar -xzf /tmp/app-deployment.tar.gz -C ./current/
            sudo chown -R www-data:www-data ./current/
            sudo chmod +x ./current/KejaHUnt_PropertiesAPI
            rm -f /tmp/app-deployment.tar.gz
            sudo systemctl start PropertyService
            sudo systemctl enable PropertyService