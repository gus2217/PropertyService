// <auto-generated />
using System;
using KejaHUnt_PropertiesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KejaHUnt_PropertiesAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250724121817_finalpolicyfix")]
    partial class finalpolicyfix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GeneralFeaturesProperty", b =>
                {
                    b.Property<long>("GeneralFeaturesId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertiesId")
                        .HasColumnType("bigint");

                    b.HasKey("GeneralFeaturesId", "PropertiesId");

                    b.HasIndex("PropertiesId");

                    b.ToTable("GeneralFeaturesProperty");
                });

            modelBuilder.Entity("IndoorFeaturesProperty", b =>
                {
                    b.Property<long>("IndoorFeaturesId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertiesId")
                        .HasColumnType("bigint");

                    b.HasKey("IndoorFeaturesId", "PropertiesId");

                    b.HasIndex("PropertiesId");

                    b.ToTable("IndoorFeaturesProperty");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.GeneralFeatures", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("PendingPropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PendingPropertyId");

                    b.ToTable("GeneralFeatures");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.IndoorFeatures", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("PendingPropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PendingPropertyId");

                    b.ToTable("IndoorFeatures");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.OutDoorFeatures", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("PendingPropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PendingPropertyId");

                    b.ToTable("OutDoorFeatures");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubmittedByUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PendingProperties");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.Policy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.PolicyDescription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PendingPropertyId")
                        .HasColumnType("bigint");

                    b.Property<long>("PolicyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PendingPropertyId");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyDescriptions");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Bathrooms")
                        .HasColumnType("integer");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uuid");

                    b.Property<string>("DoorNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<long?>("PendingPropertyId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<double>("Size")
                        .HasColumnType("double precision");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PendingPropertyId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("OutDoorFeaturesProperty", b =>
                {
                    b.Property<long>("OutdoorFeaturesId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertiesId")
                        .HasColumnType("bigint");

                    b.HasKey("OutdoorFeaturesId", "PropertiesId");

                    b.HasIndex("PropertiesId");

                    b.ToTable("OutDoorFeaturesProperty");
                });

            modelBuilder.Entity("GeneralFeaturesProperty", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.GeneralFeatures", null)
                        .WithMany()
                        .HasForeignKey("GeneralFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.Property", null)
                        .WithMany()
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndoorFeaturesProperty", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.IndoorFeatures", null)
                        .WithMany()
                        .HasForeignKey("IndoorFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.Property", null)
                        .WithMany()
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.GeneralFeatures", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", null)
                        .WithMany("GeneralFeatures")
                        .HasForeignKey("PendingPropertyId");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.IndoorFeatures", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", null)
                        .WithMany("IndoorFeatures")
                        .HasForeignKey("PendingPropertyId");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.OutDoorFeatures", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", null)
                        .WithMany("OutdoorFeatures")
                        .HasForeignKey("PendingPropertyId");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.PolicyDescription", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", "PendingProperty")
                        .WithMany("PolicyDescriptions")
                        .HasForeignKey("PendingPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.Policy", "Policy")
                        .WithMany("PolicyDescriptions")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PendingProperty");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.Unit", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", null)
                        .WithMany("Units")
                        .HasForeignKey("PendingPropertyId");

                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.Property", "Property")
                        .WithMany("Units")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("OutDoorFeaturesProperty", b =>
                {
                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.OutDoorFeatures", null)
                        .WithMany()
                        .HasForeignKey("OutdoorFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KejaHUnt_PropertiesAPI.Models.Domain.Property", null)
                        .WithMany()
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.PendingProperty", b =>
                {
                    b.Navigation("GeneralFeatures");

                    b.Navigation("IndoorFeatures");

                    b.Navigation("OutdoorFeatures");

                    b.Navigation("PolicyDescriptions");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.Policy", b =>
                {
                    b.Navigation("PolicyDescriptions");
                });

            modelBuilder.Entity("KejaHUnt_PropertiesAPI.Models.Domain.Property", b =>
                {
                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
